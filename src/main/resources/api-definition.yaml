#%RAML 0.8
---
title: OpenLMIS Stock Management
version: "@version@"
baseUri: "@baseUrl@"
protocols: [ HTTP, HTTPS ]

documentation:
    - title: Getting Started
      content: Welcome to the OpenLMIS Stock Management Service documentation.

schemas:
  - program: !include schemas/program.json
  - facility: !include schemas/facility.json
  - orderable: !include schemas/orderable.json
  - lineItem: !include schemas/lineItem.json
  - facilityType: !include schemas/facilityType.json
  - reason: !include schemas/reason.json
  - reasons: |
       {
           "type": "array",
           "items": { "type": "object", "$ref": "reason" }
       }
  - geographicZone: !include schemas/geographicZone.json
  - stockCardTemplate: !include schemas/stockCardTemplate.json
  - stockEventDto: !include schemas/stockEventDto.json
  - stockCards: !include schemas/stockCards.json
  - stockCard: !include schemas/stockCard.json
  - stockCardSummary: !include schemas/stockCardSummary.json
  - stockCardSummaries: !include schemas/stockCardSummaries.json
  - validSourceDestination: !include schemas/validSourceDestination.json
  - validSourceDestinations: |
        {
            "type": "array",
            "items": {"type": "object", "$ref": "validSourceDestination"}
        }

resourceTypes:
    - collection:
        get:
            responses:
                200:
                  description: Collection retrieved successfully
                  headers:
                    X-Content-Type-Options:
                    X-XSS-Protection:
                  body:
                      application/json:
                          schema: <<schema>>
                404:
                  description: Collection is empty.
                  headers:
                    X-Content-Type-Options:
                    X-XSS-Protection:
        post:
            body:
                application/json:
                    schema: <<schema>>
            responses:
                201:
                  description: Item created successfully
                  headers:
                    X-Content-Type-Options:
                    X-XSS-Protection:
                  body:
                      application/json:
                          schema: <<schema>>
    - member:
        get:
            responses:
                200:
                    body:
                        application/json:
                            schema: <<schema>>
        post:
            body:
                application/json:
                    schema: <<schema>>
            responses:
                200:
                    body:
                        application/json:
                            schema: <<schema>>
        delete:
            responses:
                200:

traits:
    - secured:
          queryParameters:
              access_token:
                  displayName: access_token
                  description: OAuth2 access token
                  type: string
                  required: true
                  repeat: false

/api:

  /stockCardTemplates:
      get:
        is: [ secured ]
        description: Get stock card template
        queryParameters:
          facilityType:
            required: false
          program:
            required: false
        responses:
          200:
            description: |
              Returns a default templte with all fields set to not display when no query parameters are passed.

              Returns template that matches facility type and program when query parameters are given.
            headers:
              X-Content-Type-Options:
              X-XSS-Protection:
            body:
              application/json:
                schema: stockCardTemplate
          404:
            description: Stock card template not found for the given query parameter.
          400:
            description: Provided query parameters are not correctly formatted.

      post:
        is: [ secured ]
        description: Create stock card template for a facility-type&program combination.
        body:
          application/json:
            schema: stockCardTemplate
        responses:
          201:
            description: Indicates that stock card template has been created.
          400:
            description: Indicates that request body is not correctly formated(incorrect fileds names, non-existing program or facility ids, etc).

  /stockEvents:
      post:
        is: [ secured ]
        description: Create a new stock event.
        body:
          application/json:
            schema: stockEventDto

        responses:
          201:
            description: Stock event has been processed with no validatoin error or persistence error.
            body:
              application/json:

          400:
            description: Failed to process stock event due to validation error.
            body:
              application/json:

          403:
            description: User does not have permission to create stock events for given facility and program.
            body:
              application/json:

  /stockCards:
      get:
        is: [ secured ]
        description: \[TBD\] Get a list of stock cards of a facility, with full details of each stock card.
        queryParameters:
          facility:
            required: true
            description: Facility id, indicates the facility that the queried stock cards should belong to.
          program:
            required: false
            description: When provided, returns stock cards under this program.

        responses:
          200:
            description: Returns stock cards that matche given facility and program.
            body:
              application/json:
                schema: stockCards

          404:
            description: No stock cards were found that matches given facility and program.
            body:
              application/json:

          403:
            description: User does not have permission to view stock cards of given facility and program.
            body:
              application/json:

  /stockCardSummaries:
      get:
        is: [ secured ]
        description: Get summaries of stock cards, which contains SOH, product name, and other essential information. This will NOT return any line items. (This could be used by front end for list view.)
        queryParameters:
          facility:
            required: true
            description: Facility id, indicates the facility that the queried stock card summaries should belong to.
          program:
            required: true
            description: Program id, indicates the program that the queries stock card summaries is under.

        responses:
          200:
            body:
              application/json:
                schema: stockCardSummaries

          404:
            description: No stock cards were found that matches given facility and program.
            body:
              application/json:

          403:
            description: User does not have permission to view stock cards of given facility and program.
            body:
              application/json:

  /stockCards/{id}:
      get:
        is: [ secured ]
        description: Get full details of one stock card.

        responses:
          200:
            body:
              application/json:
                schema: stockCard

          404:
            description: Stock card with given id does not exist.
            body:
              application/json:

          403:
            description: User does not have permission to view stock card.
            body:
              application/json:

  /validDestinations:
      get:
        is: [ secured ]
        description: Get a list of valid destinations of a program and a facility type.
        queryParameters:
          program:
            required: true
            description: Program ID, indicates the program that the valid destinations are under.
          facilityType:
            required: true
            description: Facility type ID, indicates the facility type that the valid destinations are under.
        responses:
          200:
            body:
              application/json:
                schema: validSourceDestinations

          400:
            description: Program or facility type does not exist.
            body:
              application/json:

          403:
            description: User does not have permission to view valid destination.
            body:
              application/json:

  /validSources:
        get:
          is: [ secured ]
          description: Get a list of valid sources of a program and a facility type.
          queryParameters:
            program:
              required: true
              description: Program ID, indicates the program that the valid sources are under.
            facilityType:
              required: true
              description: Facility type ID, indicates the facility type that the valid sources are under.
          responses:
            200:
              body:
                application/json:
                  schema: validSourceDestinations

            400:
              description: Program or facility type does not exist.
              body:
                application/json:

            403:
              description: User does not have permission to view valid sources.
              body:
                application/json:

  /reasonTypes:
      get:
        is: [ secured ]
        description: Returns a list reason types to choose from, for admin user to configure reasons.

        responses:
          200:
            body:
              application/json:

          403:
            description: User does not have permission to manage reasons.
            body:
              application/json:

  /reasonCategories:
      get:
        is: [ secured ]
        description: Returns a list reason categories to choose from, for admin user to configure reasons.

        responses:
          200:
            body:
              application/json:

          403:
            description: User does not have permission to manage reasons.
            body:
              application/json:

  /validReasons:
      get:
        is: [ secured ]
        description: Return a list of valid reasons based on program and facility type.

        queryParameters:
          program:
            description: Program id
            type: string
            required: true
          facilityType:
            description: Facility type id
            type: string
            required: true

        responses:
          200:
            description: Valid reason response
            body:
              application/json:
                schema: reasons
          400:
            description: Facility type or program is not found.
            body:
              application/json:
          403:
            description: Facility type given is no match with home facility or given program is not supported by home facility.
            body:
              application/json:

      post:
        is: [ secured ]
        description: Configure a reason to program and facility type.

        queryParameters:
          program:
            description: Program id
            type: string
            required: true
          facilityType:
            description: Facility type id
            type: string
            required: true
        body:
            application/json:
              schema: string

        responses:
          200:
            description: Given reason is already configured.
            body:
              application/json:
                schema: reason
          201:
            description: Given reason is configured.
            body:
              application/json:
                schema: reason
          400:
            description: Reason id is null. Or program or facility type or reason is not found.
            body:
              application/json:
          403:
            description: User is not allowed to configure reason.
            body:
              application/json:

